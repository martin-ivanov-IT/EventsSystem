@using EventsSystem.Common
@using Microsoft.AspNetCore.Identity;
@model EventsSystem.Web.ViewModels.FriendShip.FriendshipMessagesViewModel;

<section class="page-section portfolio ">
    <div class="container">
        <div class="display-4 ml-3 mt-3 text-muted"> @Model.Friendship.FriendTo.UserName</div>
        <hr />


        <input id="FriendEmail" value="@Model.Friendship.FriendTo.Email" hidden />

        <input id="UserEmail" value="@Model.Friendship.FriendFrom.Email" hidden />

        <div class="container">
            <div id="message-holder" class="mt-3 d-flex justify-content-start">
                <h4>Message</h4>
                <input class="w-75 ml-4 pl-3" type="text" id="messageInput" placeholder="Message..." />
                <button id="sendButton" class="ml-4 btn btn-dark btn-lg">Send</button>
            </div>
            <hr style="height: 5px;" class="bg-dark" />
            <div id="messagesList" style="font-size: 28px;">
                @foreach (var message in Model.Friendship.Messages)
                {
                    <div>@($"{message.User.UserName}: {@message.Content}") </div>
                    <hr />
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        var connection =
            new signalR.HubConnectionBuilder()
                .withUrl("/chat")
                .build();

        connection.on("NewMessage",
            function (message) {
                var chatInfo = `<div> ${escapeHtml(message.text)}</div>`;
                $("#messagesList").append(chatInfo);
            });

        $("#sendButton").click(function () {
            var message = $("#messageInput").val();
            var friendEmail = $("#FriendEmail").val();
            var userEmail = $("#UserEmail").val();
            connection.invoke("Send", [userEmail, friendEmail, message]);
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }</script>
}
